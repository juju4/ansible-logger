---

#- name: Git clone
#  git:
#    repo: https://github.com/kolide/kolide-quickstart.git
#    dest: /opt/kolide-quickstart
#    version: "{{ logger_kolideqs_version | default('5337777b7e0d0d0a8abae5aaa1933f53e783d16c') }}"

- name: Git clone osquery palantir
  git:
    repo: https://github.com/palantir/osquery-configuration.git
    dest: /opt/osquery-configuration
    version: "{{ logger_palantir_version | default('HEAD') }}"
    force: no
    update: no

- name: Update palantir config
  replace:
    dest: "{{ item.d }}"
    regexp: "{{ item.re }}"
    replace: "{{ item.rep }}"
  with_items:
    - { d: '/opt/osquery-configuration/Fleet/Endpoints/MacOS/osquery.yaml', re: 'interval: 3600', rep: 'interval: 180' }
    - { d: '/opt/osquery-configuration/Fleet/Endpoints/Windows/osquery.yaml', re: 'interval: 3600', rep: 'interval: 180' }
    - { d: '/opt/osquery-configuration/Fleet/Endpoints/MacOS/osquery.yaml', re: 'interval: 28800', rep: 'interval: 900' }
    - { d: '/opt/osquery-configuration/Fleet/Endpoints/Windows/osquery.yaml', re: 'interval: 28800', rep: 'interval: 900' }
    - { d: '/opt/osquery-configuration/Fleet/Endpoints/Windows/osquery.yaml', re: 'labels: null', rep: "labels:\n    - MS Windows" }
    - { d: '/opt/osquery-configuration/Fleet/Endpoints/packs/windows-application-security.yaml', re: 'labels: null', rep: "labels:\n    - MS Windows" }
    - { d: '/opt/osquery-configuration/Fleet/Endpoints/packs/windows-compliance.yaml', re: 'labels: null', rep: "labels:\n    - MS Windows" }
    - { d: '/opt/osquery-configuration/Fleet/Endpoints/packs/windows-registry-monitoring.yaml', re: 'labels: null', rep: "labels:\n    - MS Windows" }
    - { d: '/opt/osquery-configuration/Fleet/Endpoints/packs/performance-metrics.yaml', re: 'labels: null', rep: "labels:\n    - MS Windows\n    - macOS" }
    - { d: '/opt/osquery-configuration/Fleet/Endpoints/packs/security-tooling-checks.yaml', re: 'labels: null', rep: "labels:\n    - MS Windows\n    - macOS" }

- name: check if fleet running
  command: pgrep fleet
  register: run
  changed_when: false
  ignore_errors: true

- name: Check if extra fleetctl configuration has been done
  stat:
    path: /opt/.fleetctl_extras_done
  register: fleectl_extras

- block:
    - name: Configure Palantir fleet packs
      command: "{{ item.c }}"
      changed_when: "{{ item.w | default(true) }}"
      with_items:
        - { c: "fleetctl login --email {{ logger_fleet_email }} --password '{{ logger_fleet_adminpass }}'", w: false }
        - { c: "fleetctl apply -f /opt/osquery-configuration/Fleet/Endpoints/MacOS/osquery.yaml" }
        - { c: "fleetctl apply -f /opt/osquery-configuration/Fleet/Endpoints/Windows/osquery.yaml" }

    - name: Configure fleet with packs
      command: "fleetctl apply -f /opt/osquery-configuration/Fleet/Endpoints/packs/{{ item }}.yaml"
      with_items:
        - performance-metrics
        - security-tooling-checks
        - windows-application-security
        - windows-compliance
        - windows-registry-monitoring

    - name: Add Splunk monitors for Fleet
      command: "{{ item }}"
      with_items:
        - "/opt/splunk/bin/splunk add monitor \"{{ kolide_logs }}/osquery_result\" -index osquery -sourcetype 'osquery:json' -auth 'admin:{{ logger_splunk_passwd }}'"
        - "/opt/splunk/bin/splunk add monitor \"{{ kolide_logs }}/osquery_status\" -index osquery-status -sourcetype 'osquery:status' -auth 'admin:{{ logger_splunk_passwd }}'"
      become: yes
      become_user: "{{ logger_splunk_user }}"
      ignore_errors: true

    - name: Add marker for extra fleetctl configuration
      file:
        dest: /opt/.fleetctl_extras_done
        state: touch
  when: not fleectl_extras.stat.exists
